
- hosts: all
  remote_user: manage
  become: true
  #become_pass: 123456
  become_method: sudo
  become_user: root
  
  tasks:

    - name: Download the repo and add the Apt key
      apt_key:
        url: http://downloads.opennebula.org/repo/Debian/repo.key      
 
    - name: Edit the Apt sources file
      shell: echo 'deb https://downloads.opennebula.org/repo/5.4/Ubuntu/16.04 stable opennebula' > /etc/apt/sources.list.d/opennebula.list

    - name: Update the Apt Cache
      apt:
        update_cache: yes 
    - name: Install Open Nebula 
      apt:
        name: opennebula
        state: latest
        force: yes
    - name: Install Open Nebula Sunstone
      apt:
        name: opennebula-sunstone
        state: latest
        force: yes

    - name: Install Open Nebula Node
      apt:
        name: opennebula-node
        state: latest
        force: yes
    
    - name: Install Python-pip module
      apt:
        name: python-pip
        state: latest
        force: yes

    - name: Install pexpect module
      shell: |
        pip2 install pexpect

    - set_fact:
        ansible_python_interpreter: /usr/bin/python2.7

    - name: Install Ruby Gems
      expect:
        command: /usr/share/one/install_gems
        timeout: 600
        responses:
          Press enter to continue...: "\n"
          Do you want to continue? : "Y"
          Building native extensions.  This could take a while...: "\n"
    
    - set_fact:
        ansible_python_interpreter: /usr/bin/python3


#    - name: Install MySQL
#      expect:
#        command: apt-get install mysql-server-5.7
#        timeout: 600
#        responses:
#          'Do you want to continue?': Y
#          'New password for the MySQL \"root\" user': root
#          'Repeat password for the MySQL \"root\" user': root

    - name: Install MySQL
      apt:
        name: mysql-server-5.7
        state: latest
        force: yes
    
    - name: Copy MySQL files
      copy:
        src: /home/manage/One_Files/SQL/
        dest: /home/manage

    - name: Setup MySQL
      shell: mysql -u root -proot < /home/manage/setup.sql

    - name: Test Replace
      replace:
        path: /etc/one/oned.conf
        backup: yes
        after: '^LISTEN_ADDRESS =*' 
        regexp: '^DB = \[ BACKEND = "sqlite" \]'
        replace: '#DB = [ BACKEND = "sqlite" ]'
    - blockinfile:
        path: /etc/one/oned.conf
        backup: yes
        insertafter: '^LISTEN_ADDRESS = "0.0.0.0"'
        content: |
          DB = [ BACKEND = "mysql",
          SERVER  = "localhost",
          PORT    = 0,
          USER    = "oneadmin",
          PASSWD  = "123456",
          DB_NAME = "opennebula" ]

    - name: Change oneadmin Password
      become: true
      become_user: oneadmin
      lineinfile:
        path: /var/lib/one/.one/one_auth
        regexp: '^oneadmin*'
        line: oneadmin:123456
    
    - name: Start and enable Open Nebula Service
      service:
        name: opennebula
        enabled: yes
        state: started

    - name: Sleep for 30 seconds
      shell: sleep 30

    - name: Start and enable Open Nebula Sunstone Service
      service:
        name: opennebula-sunstone
        enabled: yes
        state: started

    - name: Restart libvirt-bin
      service:
        name: libvirt-bin
        state: restarted

#    - name: Add network Bridge
#      blockinfile:  
#        dest: /etc/network/interfaces
#        backup: yes
#        content: |
#                 auto br0 
#                 iface br0 inet static
#                 address 192.168.10.180
#                 netmask 255.255.255.0
#                 gateway 192.168.10.1
#                 dns-nameservers 192.168.10.1
#                 bridge_ports eno1
#                 bridge_fd 9
#                 bridge_hello 2
#                 bridge_maxage 12
#                 bridge_stp off
#
#                 auto br1
#                 iface br1 inet manual
#                 bridge_ports enp1s0

    - name: Copy SSH files
      become: true
      become_user: oneadmin
      copy:
        remote_src: true
        src: /var/lib/one/.ssh/id_rsa.pub
        dest: /var/lib/one/.ssh/authorized_keys
    
    - name: Enable passwordless SSH
      blockinfile:
        dest: /var/lib/one/.ssh/config
        backup: yes
        create: yes
        content: |
                 Host *
                     StrictHostKeyChecking no
                     UserKnownHostsFile /dev/null

    - name: Change SSH Directory Permissions
      file:
        path: /var/lib/one/.ssh/
        state: directory
        recurse: yes
        owner: oneadmin
        group: oneadmin
        
        
        
